@article{Azevedo,
abstract = {Learning about complex and challenging science topics with advanced learning technologies requires students to regulate their learning. The deployment of key cognitive and metacognitive regulatory processes is key to enhancing learning in open-ended learning environments such as hypermedia. In this paper, we propose a metaphor—Computers as MetaCognitive tools—to characterize the complex nature of the learning context, self-regulatory processes, task conditions, and features of advanced learning technologies. We briefly outline the theoretical and conceptual assumptions of self-regulated learning (SRL) underlying MetaTutor, a hypermedia environment designed to train and foster students' SRL processes in biology. Lastly, we provide preliminary learning outcome and SRL process data on the deployment of SRL processes during learning with MetaTutor.},
author = {Azevedo, Roger and Witherspoon, Amy and Chauncey, Amber and Burkett, Candice and Fike, Ashley},
file = {:home/hodapp/.local/share/data/Mendeley Ltd./Mendeley Desktop/Downloaded/Azevedo et al. - Unknown - MetaTutor A MetaCognitive Tool for Enhancing Self-Regulated Learning.pdf:pdf},
keywords = {FS-09-02},
title = {{MetaTutor: A MetaCognitive Tool for Enhancing Self-Regulated Learning}},
url = {https://www.aaai.org/ocs/index.php/FSS/FSS09/paper/viewFile/995/1253}
}
@article{Ben-Ari,
abstract = {Constructivism is a theory of learning which claims that students construct knowledge rather than merely re-ceive and store knowledge transmitted by the teacher. Constructivism has been extremely influential 'in sci-ence and mathematics education, but not in computer science education (CSE). This paper surveys construc-tivism inthe context of CSE, and shows how the theory can supply a theoretical basis for debating issues and evaluating proposals.},
author = {Ben-Ari, Mordechai},
file = {:home/hodapp/.local/share/data/Mendeley Ltd./Mendeley Desktop/Downloaded/Ben-Ari - Unknown - Constructivism in Computer Science Education.pdf:pdf},
title = {{Constructivism in Computer Science Education}},
url = {http://delivery.acm.org.prx.library.gatech.edu/10.1145/280000/274308/p257-ben-ari.pdf?ip=143.215.137.43\&id=274308\&acc=ACTIVE SERVICE\&key=A79D83B43E50B5B8.5E2401E94B5C98E0.4D4702B0C3E38B35.4D4702B0C3E38B35\&CFID=766523420\&CFTOKEN=41494234\&__acm__=1495}
}
@article{DeJong1994,
abstract = {Scientific discovery learning is a highly self-directed and constructivistic form of learning. A computer simulation is a type of computer-based en-vironment that is very suited for discovery learning, the main task of the learner being to infer, through experimentation, characteristics of the model underlying the simulation. In this article we give a review of the observed effectiveness and efficiency of discovery learning in simulation environments together with problems that learners may encounter in dis-covery learning, and we discuss how simulations may be combined with instructional support in order to overcome these problems. In the field of learning and instruction we now see an impressive influence of the so-called " constructivistic " approach. In this approach a strong emphasis is placed on the learner as an active agent in the knowledge acquisition process. As in the objectivistic tradition, where developments were followed and encouraged by the computer based learning environments, such as programmed instruction, tutorials, and drill and practice programs (Alessi {\&} Trollip, 1985), also within the constructivistic approach we find computer learning environments that help to advance developments. Examples are hypertext environments (see e. In this article we concentrate on the use of computer simulations for learning because learning with simulations is closely related to a specific form of construc-tivistic learning, namely scientific discovery learning. First of all, we give a short introduction to the two key terms in this article (computer simulation and},
author = {de Jong, Ton and Wouter, van Joolingen},
file = {:home/hodapp/.local/share/data/Mendeley Ltd./Mendeley Desktop/Downloaded/de Jong, Wouter - 1994 - Scientific Discovery Learning with Computer Simulations of Conceptual Domains.pdf:pdf},
publisher = {Reigeluth {\&} Schwartz Riley Smith},
title = {{Scientific Discovery Learning with Computer Simulations of Conceptual Domains}},
url = {http://tecfa.unige.ch/tecfa/teaching/aei/papiers/deJong.pdf},
year = {1994}
}
@article{Dede,
abstract = {This National Science Foundation funded project utilizes graphical multi-user virtual environments (MUVEs) as a vehicle to study (1) classroom-based situated learning and (2) the ways in which virtual environments may aid the transfer of learning from classroom contexts into real world settings. In the project's River City curriculum, teams of middle school students are asked to collaboratively solve a simulated 19 th century city's problems with illness, through interaction with each others' 'avatars', digital artifacts, tacit clues, and computer-based 'agents' acting as mentors and colleagues in a virtual community of practice. This paper describes the design-based research strategy by which we are currently extending an educational MUVE environment and curriculum developed with prior NSF funding. We are implementing a series of studies to determine if such virtual environments can sufficiently replicate authentic contexts and multi-leveled communities of practice to provide students with classroom experiences in situated learning.},
author = {Dede, Chris and Nelson, Brian and Ketelhut, Diane Jass and Clarke, Jody and Bowman, Cassie},
file = {:home/hodapp/.local/share/data/Mendeley Ltd./Mendeley Desktop/Downloaded/Dede et al. - Unknown - Design-based Research Strategies for Studying Situated Learning in a Multi-user Virtual Environment.pdf:pdf},
keywords = {design-based research,inquiry,situated learning,technology,virtual environments},
title = {{Design-based Research Strategies for Studying Situated Learning in a Multi-user Virtual Environment}},
url = {http://rivercity5.activeworlds.com/rivercityproject/documents/dedeICLS04.pdf}
}
@article{Felleisen,
abstract = {Twenty years ago Abelson and Sussman's Structure and Interpretation of Computer Pro-grams radically changed the intellectual landscape of introductory computing courses. In-stead of teaching some currently fashionable programming language, it employed Scheme and functional programming to teach important ideas. Introductory courses based on the book showed up around the world and made Scheme and functional programming popular. Unfortunately, these courses quickly disappeared again due to shortcomings of the book and the whimsies of Scheme. Worse, the experiment left people with a bad impression of Scheme and functional programming in general. In this pearl, we propose an alternative role for functional programming in the first-year curriculum. Specifically, we present a framework for discussing the first-year curriculum and, based on it, the design rationale for our book and course, dubbed How to Design Programs. The approach emphasizes the systematic design of programs. Experience shows that it works extremely well as a preparation for a course on object-oriented programming.},
annote = {This gives what appear to be some well-founded criticisms, some of which might be relevant to me.},
author = {Felleisen, Matthias and Findler, Robert Bruce and Flatt, Matthew and Krishnamurthi, Shriram},
file = {:home/hodapp/.local/share/data/Mendeley Ltd./Mendeley Desktop/Downloaded/Felleisen et al. - Unknown - The Structure and Interpretation of the Computer Science Curriculum.pdf:pdf},
title = {{The Structure and Interpretation of the Computer Science Curriculum}},
url = {http://www.ccs.neu.edu/racket/pubs/jfp2004-fffk.pdf}
}
@techreport{Hardy1940,
author = {Hardy, G H},
file = {:home/hodapp/.local/share/data/Mendeley Ltd./Mendeley Desktop/Downloaded/Hardy - 1940 - A Mathematician's Apology.pdf:pdf},
title = {{A Mathematician's Apology}},
url = {https://www.math.ualberta.ca/mss/misc/A Mathematician{\%}27s Apology.pdf},
year = {1940}
}
@article{Hart,
abstract = {Sphere tracing is a new technique for rendering implicit surfaces using geometric distance. Distance-based models are common in computer-aided geometric design and in the modeling of articulated figures. Given a function returning the distance to an object, sphere tracing marches along the ray toward its first intersection in steps guaranteed not to penetrate the implicit surface. Sphere tracing is particularly adept at rendering pathological surfaces. Creased and rough implicit surfaces are defined by functions with discontinuous or undefined derivatives. Current root finding techniques such as L-G surfaces and interval analysis require periodic evaluation of the derivative, and their behavior is dependent on the behavior of the derivative. Sphere tracing requires only a bound on the magnitude of the derivative, robustly avoiding problems ¡ Manuscript, July 1994. Recommended for publication: The Visual Computer. 5-70 where the derivative jumps or vanishes. This robustness and scope support sphere tracing as an efficient direct visualization system for the design and investigation of new implicit models. Furthermore, sphere tracing efficiently approximates cone tracing, supporting symbolic-prefiltered antialiasing. Signed distance functions for a variety of primitives and operations are derived and appear independently as appendices, specifically the natural quadrics and torus, superquadrics, Bezier-based generalized cylinders and offset surfaces, constructive solid geometry, pseudonorm and Gaussian blends, taper, twist and hypertexture.},
author = {Hart, John C},
file = {:home/hodapp/.local/share/data/Mendeley Ltd./Mendeley Desktop/Downloaded/Hart - Unknown - Sphere Tracing A Geometric Method for the Antialiased Ray Tracing of Implicit Surfaces.pdf:pdf},
keywords = {Lipschitz condition,area sampling,blending,deformation,distance,implicit surface,numerical methods,ray tracing,solid modeling},
title = {{Sphere Tracing: A Geometric Method for the Antialiased Ray Tracing of Implicit Surfaces}},
url = {https://pdfs.semanticscholar.org/1f0d/001a247dc5b7facfa7ed445cc9d6a7801647.pdf},
year = {1994}
}
@article{Hart1989,
abstract = {As shown in 1982, Julia sets of quadratic functions as well as many other deterministic fractals exist in spaces of higher dimensionality than the complex plane. Originally a boundary-tracking algorithm was used to view these structures but required a large amount of storage space to operate. By ray tracing these objects, the storage facilities of a graphics work- station frame buffer are sufficient. A short discussion of a specific set of 3-D deterministic fractals precedes a full description of a ray-tracing algorithm applied to these objects. A comparison with the boundary- tracking method and applications to other 3-D deter- ministic fractals are also included.},
author = {Hart, John C. and Sandin, Daniel J. and Kauffman, Louis H.},
doi = {10.1145/74334.74363},
file = {:mnt/share/Calibre Library/Hart{\_} Sandin/Ray Tracing Deterministic 3-D Fractals (605)/Ray Tracing Deterministic 3-D Fractals - Hart{\_} Sandin.pdf:pdf},
isbn = {0-201-50434-0},
issn = {00978930},
journal = {Computer Graphics},
number = {3},
pages = {289--296},
title = {{Ray Tracing Deterministic 3-D Fractals}},
volume = {23},
year = {1989}
}
@article{Hoadley,
abstract = {One of the biggest challenges in helping students learn via CSCL is embedding their work in appropriate social contexts and helping create a culture of inquiry and collaboration. This article describes how design-based research allowed the deliberate evolution of a set of tools and practices to help students collaborate effectively. The SpeakEasy, one of the earliest Web-based discussion boards, was evolved from prior discussion tools, adapted to an Internet-based science learning environment, and evolved to work with both online and offline classroom projects and practices. Research conducted as part of the evolution shows how social cues can be used to help students develop an integrated understanding of science. Implications for the design of socio-technical systems are discussed.},
author = {Hoadley, Christopher},
file = {:home/hodapp/.local/share/data/Mendeley Ltd./Mendeley Desktop/Downloaded/Hoadley - Unknown - Creating context Design-based research in creating and understanding CSCL.pdf:pdf},
keywords = {Design,research methodologies,science education,threaded discussion},
title = {{Creating context: Design-based research in creating and understanding CSCL}},
url = {http://tophe.net/papers/cscl02hoadley.pdf}
}
@article{Lamb2011,
abstract = {From designing video games to producing animated movies, an increasing number of young people envision themselves in technology-related careers.  Today, computer classes often use web development tools, learning interactives, and social media websires allowing few opportunities to apply the problem-solving and deep thinking skills required in a higher-level programming environment.  After downloading and installing the free software from the Scratch web site, scratch.niit.edu, users drag chunks of code from the blocks palette into the script area.},
annote = {Wish I had a PDF or scan of this},
author = {Lamb, Annette and Johnson, Larry},
file = {:home/hodapp/.local/share/data/Mendeley Ltd./Mendeley Desktop/Downloaded/Lamb, Johnson - 2011 - Scratch Computer Programming for 21st Century Learners.pdf:pdf},
issn = {14811782},
journal = {Teacher Librarian},
keywords = {Books,Computer programming,Computer science,Core curriculum,Library resources,Programming languages,School libraries,Skills,Software},
number = {4},
pages = {64--68,75},
title = {{Scratch: Computer Programming for 21st Century Learners}},
url = {http://search.proquest.com/docview/872336723?accountid=12723$\backslash$nhttp://journalfinder.wtcox.com/ncssm/incoming.asp??atitle=Scratch:+Computer+Programming+for+21st+Century+Learners\&title=Teacher+Librarian\&issn=14811782\&date=2011-04-01\&spage=64\&au=Lamb,+Annette},
volume = {38},
year = {2011}
}
@article{Monroy-Hernandez,
annote = {More about the implications of derivative works and IP in this context},
author = {Monroy-Hern{\'{a}}ndez, Andr{\'{e}}s},
file = {:home/hodapp/.local/share/data/Mendeley Ltd./Mendeley Desktop/Downloaded/Monroy-Hern{\'{a}}ndez - Unknown - Designing a website for creative learning.pdf:pdf},
title = {{Designing a website for creative learning}},
url = {https://download.scratch.mit.edu/websci09-andresmh.pdf}
}
@incollection{Papert1999,
author = {Papert, Seymour},
booktitle = {Logo Philosophy and Implementation},
file = {:home/hodapp/.local/share/data/Mendeley Ltd./Mendeley Desktop/Downloaded/Clotilde Fonseca, Geraldine Kozberg, Tempel - Unknown - Logo Philosophy and Implementation THE COMPUTER IN COSTA RICA A New Door to E(2).pdf:pdf},
isbn = {2-89371-494-3},
pages = {V--XVI},
publisher = {Logo Computer Systems Inc.},
title = {{What is Logo? Who Needs It?}},
url = {http://www.microworlds.com/company/philosophy.pdf},
year = {1999}
}
@article{Papert,
author = {Papert, Seymour and Harel, Idit},
file = {:home/hodapp/.local/share/data/Mendeley Ltd./Mendeley Desktop/Downloaded/Papert, Harel - Unknown - Situating Constructionism.pdf:pdf},
title = {{Situating Constructionism}},
url = {http://web.media.mit.edu/~calla/web_comunidad/Reading-En/situating_constructionism.pdf}
}
@article{Perlin1989,
author = {Perlin, K. and Hoffert, E. M.},
doi = {10.1145/74334.74359},
file = {:mnt/share/Calibre Library/Ken Perlin/Hypertexture (209)/Hypertexture - Ken Perlin.pdf:pdf},
isbn = {0-89791-312-4},
issn = {00978930},
journal = {ACM SIGGRAPH Computer Graphics},
number = {3},
pages = {253--262},
title = {{Hypertexture}},
url = {http://www.cs.jhu.edu/~subodh/458/p253-perlin.pdf},
volume = {23},
year = {1989}
}
@misc{Quilez2008,
author = {Quilez, I{\~{n}}igo},
file = {:home/hodapp/.local/share/data/Mendeley Ltd./Mendeley Desktop/Downloaded/Quilez - 2008 - Rendering Worlds with Two Triangles with raytracing on the GPU in 4096 bytes.pdf:pdf},
title = {{Rendering Worlds with Two Triangles with raytracing on the GPU in 4096 bytes}},
url = {http://iquilezles.org/www/material/nvscene2008/rwwtt.pdf},
year = {2008}
}
@article{Resnick2009,
abstract = {"Digital fluency" should mean designing, creating, and remixing, not just browsing, chatting, and interacting.},
annote = {Good overview and accessible explanation of the design (importantly, the 'why')},
archivePrefix = {arXiv},
arxivId = {-},
author = {Resnick, Mitchel and Silverman, Brian and Kafai, Yasmin and Maloney, John and Monroy-Hern{\'{a}}ndez, Andr{\'{e}}s and Rusk, Natalie and Eastmond, Evelyn and Brennan, Karen and Millner, Amon and Rosenbaum, Eric and Silver, Jay},
doi = {10.1145/1592761.1592779},
eprint = {-},
file = {:home/hodapp/.local/share/data/Mendeley Ltd./Mendeley Desktop/Downloaded/Resnick et al. - 2009 - Scratch Programming for All.pdf:pdf},
isbn = {1011451592},
issn = {00010782},
journal = {Communications of the ACM},
number = {11},
pages = {60},
pmid = {21274723},
title = {{Scratch: Programming for All}},
url = {http://web.media.mit.edu/~mres/papers/Scratch-CACM-final.pdf},
volume = {52},
year = {2009}
}
@article{Stager,
abstract = {From 1999 to 2002, the author was the principal investigator and one of three architects of an alternative learning environment operated inside The Maine Youth Center, the state's troubled juvenile detention facility. Guided by the learning theory of constructionism, a multi-age, interdisciplinary technology-rich learning environment was created to support the development of personally meaningful projects based on student interest, talent and experience. Students in the Constructionist Learning Laboratory (CLL) often classified as learning disabled, engaged in rigorous learning adventures and developed positive personal behaviours in a context free from traditional curricula, behaviourism or other aspects of coercion. Personal and collaborative long-range student projects incorporated powerful ideas from mathematics, science, computer science, engineering and the arts. Sophisticated projects resulted from a more expansive view of technology that included programming, robotics, woodworking and communications via a variety of media. Completed projects and detailed explanations of both product and process demonstrate evidence of the construction of knowledge. Unlike many school projects, CLL students had to contend with what Seymour Papert calls the " resistance of reality. " In other words, their projects had to work, not just pass. The intrinsic motivation and rigorous engagement at the heart of this process is of critical importance. Technology played an enormous role in not just improving self-esteem, but in affording students the chance to be mathematicians, scientists and engineers. This research suggests the viability of Papert's constructionism as a foundation for designing productive learning environments, not only for a transient population of at-risk teens, but the broader learning community. This paper will also document new constructionist approaches to teaching and learning with computational materials. Future research might investigate if similar approaches to teaching and learning not only reverses the effects of school on at-risk learners, but may be used to design learning environments that place fewer students at-risk in the first place.},
annote = {This is an excellent article. The results here are the same story I've heard informally many times over - from my brother, from fellow students.},
author = {Stager, Gary},
file = {:home/hodapp/.local/share/data/Mendeley Ltd./Mendeley Desktop/Downloaded/Stager - Unknown - Papertian Constructionism and the Design of Productive Contexts for Learning.pdf:pdf},
keywords = {at-risk learners,constructionism,engineering school reform},
title = {{Papertian Constructionism and the Design of Productive Contexts for Learning}},
url = {http://stager.org/articles/eurologo2005.pdf}
}
@article{Stager2016,
abstract = {Seymour Aubrey Papert (born February 29, 1928) is an MIT mathematician, computer scientist, and educator. He is one of the pioneers of artificial intelligence, and co-inventor, with Wally Feurzeig, of the Logo programming language.},
author = {Stager, Gary S.},
doi = {10.1038/537308a},
file = {:home/hodapp/.local/share/data/Mendeley Ltd./Mendeley Desktop/Downloaded/Unknown - 1928 - Seymour Papert (1928-2016) - Father of educational computing.pdf:pdf},
isbn = {1382-3892},
issn = {0028-0836},
journal = {Nature},
month = {sep},
number = {7620},
pages = {308--308},
title = {{Seymour Papert (1928–2016)}},
url = {https://www.nature.com/nature/journal/v537/n7620/pdf/537308a.pdf},
volume = {537},
year = {2016}
}
